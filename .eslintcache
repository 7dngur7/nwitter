[{"C:\\Users\\이우혁\\nwitter\\src\\index.js":"1","C:\\Users\\이우혁\\nwitter\\src\\components\\App.js":"2","C:\\Users\\이우혁\\nwitter\\src\\components\\Router.js":"3","C:\\Users\\이우혁\\nwitter\\src\\routes\\Auth.js":"4","C:\\Users\\이우혁\\nwitter\\src\\routes\\Home.js":"5","C:\\Users\\이우혁\\nwitter\\src\\fbase.js":"6","C:\\Users\\이우혁\\nwitter\\src\\components\\Navigation.js":"7","C:\\Users\\이우혁\\nwitter\\src\\routes\\Profile.js":"8","C:\\Users\\이우혁\\nwitter\\src\\components\\Nweet.js":"9"},{"size":210,"mtime":1610188547688,"results":"10","hashOfConfig":"11"},{"size":676,"mtime":1610272085440,"results":"12","hashOfConfig":"11"},{"size":771,"mtime":1610259024097,"results":"13","hashOfConfig":"11"},{"size":2554,"mtime":1610230360668,"results":"14","hashOfConfig":"11"},{"size":2732,"mtime":1610785887478,"results":"15","hashOfConfig":"11"},{"size":686,"mtime":1610750953301,"results":"16","hashOfConfig":"11"},{"size":308,"mtime":1610231965742,"results":"17","hashOfConfig":"11"},{"size":258,"mtime":1610232135106,"results":"18","hashOfConfig":"11"},{"size":1719,"mtime":1610785819746,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"152u78k",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\이우혁\\nwitter\\src\\index.js",[],["43","44"],"C:\\Users\\이우혁\\nwitter\\src\\components\\App.js",["45"],"import React, {useState, useEffect} from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return ( \n    <>\n      {init ? (<AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} />\n) : \"Initializing...\"}\n\n</>\n  );\n}\n\nexport default App;\n","C:\\Users\\이우혁\\nwitter\\src\\components\\Router.js",["46"],"import React, {useState} from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({isLoggedIn}, userObj) => {\r\nreturn(\r\n<Router>\r\n    {isLoggedIn && <Navigation />}\r\n    <Switch>\r\n        {isLoggedIn ?\r\n        <>\r\n        <Route exact path=\"/\">\r\n            <Home userObj={userObj}/>\r\n        </Route>\r\n        <Route exact path=\"/profile\"><Profile /></Route>\r\n        <Redirect from =\"*\" to = \"/\" />\r\n        </> : <Route exact path=\"/\"><Auth /></Route>} \r\n        <Redirect from =\"*\" to = \"/\" />\r\n    </Switch>\r\n</Router>\r\n);\r\n}\r\nexport default AppRouter;\r\n","C:\\Users\\이우혁\\nwitter\\src\\routes\\Auth.js",["47"],"import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newaccount, setNewaccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n          setEmail(value);\r\n        } else if (name === \"password\") {\r\n          setPassword(value);\r\n        }\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newaccount) {\r\n              data = await authService.createUserWithEmailAndPassword(\r\n                email,\r\n                password\r\n              );\r\n            } else {\r\n              data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n          } catch (error) {\r\n            console.log(error.message);\r\n          }\r\n        };\r\n        const toggleAccount = () => setNewaccount((prev) => !prev);\r\n        const onSocialClick = async (event) =>{\r\n            const{\r\n                target : {name},} = event;\r\n                let provider;\r\n                if(name === \"google\"){\r\n                    provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n                }else if(name ===\"github\"){\r\n                    provider = new firebaseInstance.auth.GithubAuthProvider();\r\n                }\r\n                await authService.signInWithPopup(provider);\r\n        };\r\n         return(\r\n        <div>\r\n    <form onSubmit={onSubmit}>\r\n        <input name = \"email\" type = \"text\" placeholder = \"email\" required\r\n        value = {email} onChange = {onChange}\r\n        />\r\n        <input name = \"password\" type = \"password\" placeholder = \"password\" required\r\n         value={password} onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newaccount ? \"Create Account\" : \"Sign In\"}\r\n          />\r\n            {error}\r\n    </form>\r\n    <span onClick={toggleAccount}>\r\n        {newaccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n      <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","C:\\Users\\이우혁\\nwitter\\src\\routes\\Home.js",["48","49"],"C:\\Users\\이우혁\\nwitter\\src\\fbase.js",[],"C:\\Users\\이우혁\\nwitter\\src\\components\\Navigation.js",[],"C:\\Users\\이우혁\\nwitter\\src\\routes\\Profile.js",["50"],"import React from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nexport default () => {\r\n    const onLogoutClick = () => authService.signOut();\r\n    return (\r\n        <>\r\n        <button onClick = {onLogoutClick}>log out</button>\r\n        </>\r\n    )\r\n}","C:\\Users\\이우혁\\nwitter\\src\\components\\Nweet.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":20},{"ruleId":"56","severity":1,"message":"60","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":8,"column":19,"nodeType":"58","messageId":"59","endLine":8,"endColumn":27},{"ruleId":"62","severity":1,"message":"63","line":25,"column":22,"nodeType":"64","messageId":"65","endLine":25,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":77,"column":12,"nodeType":"68","endLine":77,"endColumn":69},{"ruleId":"69","severity":1,"message":"70","line":4,"column":1,"nodeType":"71","endLine":11,"endColumn":2},{"ruleId":"66","severity":1,"message":"67","line":47,"column":13,"nodeType":"68","endLine":47,"endColumn":76},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setError' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]